.bubble-menu {
    display: flex;
    background-color: #0d0d0d;
    padding: 0.2rem;
    border-radius: 0.5rem;
}
.bubble-menu button {
    border: none;
    background: none;
    color: #fff;
    font-size: 0.85rem;
    font-weight: 500;
    padding: 0 0.2rem;
    opacity: 0.6;
}
.bubble-menu button:hover,
.bubble-menu button.is-active {
    opacity: 1;
}

.editor {
    height: 100%;
    width: 100%;
}
.editor > .tiptap {
    height: 100%;
    margin-top: 0.75em;
    box-sizing: border-box;
}
.editor ul[data-type="taskList"] {
    list-style: none;
    padding: 0;
}
.editor ul[data-type="taskList"] p {
    margin: 0;
}
.editor ul[data-type="taskList"] li {
    display: flex;
    align-items: center;
}
.editor ul[data-type="taskList"] li > label {
    flex: 0 0 auto;
    margin-right: 0.5rem;
    user-select: none;
    line-height: 1.4;
    margin-top: 0;
}
.editor input[type="checkbox"] {
    border-radius: 4px;
}
.editor ul[data-type="taskList"] li > div {
    flex: 1 1 auto;
}
.editor ul[data-type="taskList"] li ul li,
.editor ul[data-type="taskList"] li ol li {
    display: list-item;
}
.editor ul[data-type="taskList"] li ul[data-type="taskList"] > li {
    display: flex;
}
.editor .spinner-animation {
    animation: spinner 1.6s linear infinite;
    animation-delay: -1.6s;
}
.editor .spinner-animation-secondary {
    animation-delay: -1s;
}
@keyframes spinner {
    12.5% {
        x: 13px;
        y: 1px;
    }
    25% {
        x: 13px;
        y: 1px;
    }
    37.5% {
        x: 13px;
        y: 13px;
    }
    50% {
        x: 13px;
        y: 13px;
    }
    62.5% {
        x: 1px;
        y: 13px;
    }
    75% {
        x: 1px;
        y: 13px;
    }
    87.5% {
        x: 1px;
        y: 1px;
    }
}
.editor .ProseMirror figure[data-type="imageBlock"] {
    margin: 0;
}
.editor .ProseMirror figure[data-type="imageBlock"] img {
    display: block;
    width: 100%;
    border-radius: 0.25rem;
}
.editor .ProseMirror figure[data-type="blockquoteFigure"] {
    margin-top: 3.5rem;
    margin-bottom: 3.5rem;
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity));
}
.editor :is(.dark .ProseMirror figure[data-type="blockquoteFigure"]) {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
}
.editor .ProseMirror [data-type="blockquoteFigure"] blockquote,
.editor .ProseMirror > blockquote blockquote {
    margin: 0;
}
.editor .ProseMirror [data-type="blockquoteFigure"] blockquote > :first-child,
.editor .ProseMirror > blockquote blockquote > :first-child {
    margin-top: 0;
}
.editor .ProseMirror [data-type="blockquoteFigure"] blockquote > :last-child,
.editor .ProseMirror > blockquote blockquote > :last-child {
    margin-bottom: 0;
}
.editor .ProseMirror [data-type="columns"] {
    margin-top: 3.5rem;
    margin-bottom: 3rem;
    display: grid;
    gap: 1rem;
}
.editor .ProseMirror [data-type="columns"].layout-sidebar-left {
    grid-template-columns: 40fr 60fr;
}
.editor .ProseMirror [data-type="columns"].layout-sidebar-right {
    grid-template-columns: 60fr 40fr;
}
.editor .ProseMirror [data-type="columns"].layout-two-column {
    grid-template-columns: 1fr 1fr;
}
.editor .ProseMirror [data-type="column"] {
    overflow: auto;
}
.editor .ProseMirror p code {
    padding: 0.1rem 0.4rem;
}
.editor .ProseMirror code {
    border-radius: 0.125rem;
    --tw-bg-opacity: 1;
    background-color: rgb(23 23 23 / var(--tw-bg-opacity));
    font-family:
        ui-monospace,
        SFMono-Regular,
        Menlo,
        Monaco,
        Consolas,
        Liberation Mono,
        Courier New,
        monospace;
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
    caret-color: #fff;
    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.editor .ProseMirror code::-moz-selection {
    background-color: rgba(255, 255, 255, 0.3);
}
.editor .ProseMirror code::selection {
    background-color: rgba(255, 255, 255, 0.3);
}
.editor .ProseMirror pre {
    margin-top: 3rem;
    margin-bottom: 3rem;
    border-radius: 0.25rem;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: rgb(0 0 0 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(64 64 64 / var(--tw-bg-opacity));
    padding: 1rem;
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
    caret-color: #fff;
}
.editor :is(.dark .ProseMirror pre) {
    --tw-border-opacity: 1;
    border-color: rgb(38 38 38 / var(--tw-border-opacity));
    --tw-bg-opacity: 1;
    background-color: rgb(23 23 23 / var(--tw-bg-opacity));
}
.editor .ProseMirror pre ::-moz-selection {
    background-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror pre ::selection {
    background-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror pre code {
    background-color: inherit;
    padding: 0;
    color: inherit;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.editor .ProseMirror pre .hljs-comment,
.editor .ProseMirror pre .hljs-quote {
    --tw-text-opacity: 1;
    color: rgb(163 163 163 / var(--tw-text-opacity));
}
.editor .ProseMirror pre .hljs-attribute,
.editor .ProseMirror pre .hljs-link,
.editor .ProseMirror pre .hljs-name,
.editor .ProseMirror pre .hljs-regexp,
.editor .ProseMirror pre .hljs-selector-class,
.editor .ProseMirror pre .hljs-selector-id,
.editor .ProseMirror pre .hljs-tag,
.editor .ProseMirror pre .hljs-template-variable,
.editor .ProseMirror pre .hljs-variable {
    --tw-text-opacity: 1;
    color: rgb(252 165 165 / var(--tw-text-opacity));
}
.editor .ProseMirror pre .hljs-built_in,
.editor .ProseMirror pre .hljs-builtin-name,
.editor .ProseMirror pre .hljs-literal,
.editor .ProseMirror pre .hljs-meta,
.editor .ProseMirror pre .hljs-number,
.editor .ProseMirror pre .hljs-params,
.editor .ProseMirror pre .hljs-type {
    --tw-text-opacity: 1;
    color: rgb(253 186 116 / var(--tw-text-opacity));
}
.editor .ProseMirror pre .hljs-bullet,
.editor .ProseMirror pre .hljs-string,
.editor .ProseMirror pre .hljs-symbol {
    --tw-text-opacity: 1;
    color: rgb(190 242 100 / var(--tw-text-opacity));
}
.editor .ProseMirror pre .hljs-section,
.editor .ProseMirror pre .hljs-title {
    --tw-text-opacity: 1;
    color: rgb(253 224 71 / var(--tw-text-opacity));
}
.editor .ProseMirror pre .hljs-keyword,
.editor .ProseMirror pre .hljs-selector-tag {
    --tw-text-opacity: 1;
    color: rgb(94 234 212 / var(--tw-text-opacity));
}
.editor .ProseMirror pre .hljs-emphasis {
    font-style: italic;
}
.editor .ProseMirror pre .hljs-strong {
    font-weight: 700;
}
.editor .ProseMirror .collaboration-cursor__caret {
    pointer-events: none;
    position: relative;
    margin-left: -1px;
    margin-right: -1px;
    overflow-wrap: normal;
    word-break: normal;
    border-right-width: 1px;
    border-left-width: 1px;
    --tw-border-opacity: 1;
    border-color: rgb(0 0 0 / var(--tw-border-opacity));
}
.editor .ProseMirror .collaboration-cursor__label {
    position: absolute;
    left: -1px;
    top: -1.4em;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    white-space: nowrap;
    border-radius: 0.25rem;
    border-top-left-radius: 0;
    padding: 0.125rem 0.375rem;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 600;
    line-height: 1;
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity));
}
.editor .ProseMirror ol {
    list-style-type: decimal;
}
.editor .ProseMirror ul {
    list-style-type: disc;
}
.editor .ProseMirror ol,
.editor .ProseMirror ul {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    padding: 0 2rem;
}
.editor .ProseMirror ol:first-child,
.editor .ProseMirror ul:first-child {
    margin-top: 0;
}
.editor .ProseMirror ol:last-child,
.editor .ProseMirror ul:last-child {
    margin-bottom: 0;
}
.editor .ProseMirror ol li,
.editor .ProseMirror ol ol,
.editor .ProseMirror ol ul,
.editor .ProseMirror ul li,
.editor .ProseMirror ul ol,
.editor .ProseMirror ul ul {
    margin-top: 0.25rem;
    margin-bottom: 0.25rem;
}
.editor .ProseMirror ol p,
.editor .ProseMirror ul p {
    margin-top: 0;
    margin-bottom: 0.25rem;
}
.editor .ProseMirror > ol,
.editor .ProseMirror > ul {
    margin-top: 2rem;
    margin-bottom: 2rem;
}
.editor .ProseMirror > ol:first-child,
.editor .ProseMirror > ul:first-child {
    margin-top: 0;
}
.editor .ProseMirror > ol:last-child,
.editor .ProseMirror > ul:last-child {
    margin-bottom: 0;
}
.editor .ProseMirror ul[data-type="taskList"] {
    list-style-type: none;
    padding: 0;
}
.editor .ProseMirror ul[data-type="taskList"] p {
    margin: 0;
}
.editor .ProseMirror ul[data-type="taskList"] li {
    display: flex;
    align-items: center;
}
.editor .ProseMirror ul[data-type="taskList"] li > label {
    margin-top: 0;
    margin-right: 0.5rem;
    flex: 1 1 auto;
    flex-shrink: 0;
    flex-grow: 0;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    line-height: 1.4;
}
.editor .ProseMirror ul[data-type="taskList"] li > div {
    flex: 1 1 auto;
}
.editor .ProseMirror ul[data-type="taskList"] li[data-checked="true"] {
    text-decoration-line: line-through;
}
.editor .ProseMirror .is-empty:before {
    pointer-events: none;
    float: left;
    height: 0;
    width: 100%;
    color: rgba(0, 0, 0, 0.4);
}
.editor :is(.dark .ProseMirror .is-empty):before {
    color: rgba(255, 255, 255, 0.4);
}
.editor .ProseMirror.ProseMirror-focused > [data-type="columns"] > [data-type="column"] > p.is-empty.has-focus:before,
.editor .ProseMirror.ProseMirror-focused > p.has-focus.is-empty:before {
    content: "Type  /  to browse options";
}
.editor .ProseMirror > .is-editor-empty:before {
    content: "Click here to start writing …";
}
.editor .ProseMirror blockquote .is-empty:not(.is-editor-empty):first-child:last-child:before {
    content: "Enter a quote";
}
.editor .ProseMirror blockquote + figcaption.is-empty:not(.is-editor-empty):before {
    content: "Author";
}
.tiptap blockquote {
    margin-left: 0;
    padding-left: 1rem;
    border-left: 2px solid gray;
}
.editor .ProseMirror [data-placeholder][data-suggestion] :before,
.editor .ProseMirror [data-placeholder][data-suggestion]:before {
    content: none !important;
}
.editor .ProseMirror .tableWrapper {
    margin-top: 3rem;
    margin-bottom: 3rem;
}
.editor .ProseMirror table {
    box-sizing: border-box;
    width: 100%;
    border-collapse: collapse;
    border-radius: 0.25rem;
    border-color: rgba(0, 0, 0, 0.1);
}
.editor :is(.dark .ProseMirror table) {
    border-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror table td,
.editor .ProseMirror table th {
    position: relative;
    min-width: 100px;
    border-width: 1px;
    border-color: rgba(0, 0, 0, 0.1);
    padding: 0.5rem;
    text-align: left;
    vertical-align: top;
}
.editor :is(.dark .ProseMirror table td),
.editor :is(.dark .ProseMirror table th) {
    border-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror table td:first-of-type:not(a),
.editor .ProseMirror table th:first-of-type:not(a) {
    margin-top: 0;
}
.editor .ProseMirror table td p,
.editor .ProseMirror table th p {
    margin: 0;
}
.editor .ProseMirror table td p + p,
.editor .ProseMirror table th p + p {
    margin-top: 0.75rem;
}
.editor .ProseMirror table th {
    font-weight: 700;
}
.editor .ProseMirror table .column-resize-handle {
    pointer-events: none;
    position: absolute;
    bottom: -2px;
    right: -0.25rem;
    top: 0;
    display: flex;
    width: 0.5rem;
}
.editor .ProseMirror table .column-resize-handle:before {
    margin-left: 0.5rem;
    height: 100%;
    width: 1px;
    background-color: rgba(0, 0, 0, 0.2);
}
.editor :is(.dark .ProseMirror table .column-resize-handle):before {
    background-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror table .column-resize-handle:before {
    content: "";
}
.editor .ProseMirror table .selectedCell {
    border-style: double;
    border-color: rgba(0, 0, 0, 0.2);
    background-color: rgba(0, 0, 0, 0.05);
}
.editor :is(.dark .ProseMirror table .selectedCell) {
    border-color: rgba(255, 255, 255, 0.2);
    background-color: rgba(255, 255, 255, 0.1);
}
.editor .ProseMirror table .grip-column,
.editor .ProseMirror table .grip-row {
    position: absolute;
    z-index: 10;
    display: flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.05);
}
.editor :is(.dark .ProseMirror table .grip-column),
.editor :is(.dark .ProseMirror table .grip-row) {
    background-color: rgba(255, 255, 255, 0.1);
}
.editor .ProseMirror table .grip-column {
    left: 0;
    top: -0.75rem;
    margin-left: -1px;
    height: 0.75rem;
    width: calc(100% + 1px);
    border-left-width: 1px;
    border-color: rgba(0, 0, 0, 0.2);
}
.editor :is(.dark .ProseMirror table .grip-column) {
    border-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror table .grip-column.selected:before,
.editor .ProseMirror table .grip-column:hover:before {
    content: "";
    width: 0.625rem;
}
.editor .ProseMirror table .grip-column:hover {
    background-color: rgba(0, 0, 0, 0.1);
}
.editor :is(.dark .ProseMirror table .grip-column:hover) {
    background-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror table .grip-column:hover:before {
    border-bottom: 2px;
    border-color: rgba(0, 0, 0, 0.6);
    border-style: dotted;
}
.editor :is(.dark .ProseMirror table .grip-column:hover):before {
    border-color: rgba(255, 255, 255, 0.6);
}
.editor .ProseMirror table .grip-column.first {
    border-top-left-radius: 0.125rem;
    border-color: transparent;
}
.editor .ProseMirror table .grip-column.last {
    border-top-right-radius: 0.125rem;
}
.editor .ProseMirror table .grip-column.selected {
    border-color: rgba(0, 0, 0, 0.3);
    background-color: rgba(0, 0, 0, 0.3);
    --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.editor :is(.dark .ProseMirror table .grip-column.selected) {
    border-color: rgba(255, 255, 255, 0.3);
    background-color: rgba(255, 255, 255, 0.3);
}
.editor .ProseMirror table .grip-column.selected:before {
    border-bottom-width: 2px;
    border-style: dotted;
}
.editor .ProseMirror table .grip-row {
    left: -0.75rem;
    top: 0;
    margin-top: -1px;
    height: calc(100% + 1px);
    width: 0.75rem;
    border-top-width: 1px;
    border-color: rgba(0, 0, 0, 0.2);
}
.editor :is(.dark .ProseMirror table .grip-row) {
    border-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror table .grip-row.selected:before,
.editor .ProseMirror table .grip-row:hover:before {
    height: 0.625rem;
    content: "";
}
.editor .ProseMirror table .grip-row:hover {
    background-color: rgba(0, 0, 0, 0.1);
}
.editor :is(.dark .ProseMirror table .grip-row:hover) {
    background-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror table .grip-row:hover:before {
    border-left: 2px;
    border-color: rgba(0, 0, 0, 0.6);
    border-style: dotted;
}
.editor :is(.dark .ProseMirror table .grip-row:hover):before {
    border-color: rgba(255, 255, 255, 0.6);
}
.editor .ProseMirror table .grip-row.first {
    border-top-left-radius: 0.125rem;
    border-color: transparent;
}
.editor .ProseMirror table .grip-row.last {
    border-bottom-left-radius: 0.125rem;
}
.editor .ProseMirror table .grip-row.selected {
    border-color: rgba(0, 0, 0, 0.3);
    background-color: rgba(0, 0, 0, 0.3);
    --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.editor :is(.dark .ProseMirror table .grip-row.selected) {
    border-color: rgba(255, 255, 255, 0.3);
    background-color: rgba(255, 255, 255, 0.3);
}
.editor .ProseMirror table .grip-row.selected:before {
    border-left-width: 2px;
    border-style: dotted;
}
.editor .ProseMirror p {
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    line-height: 1.625;
}
.editor .ProseMirror p:first-child {
    margin-top: 0;
}
.editor .ProseMirror p:last-child {
    margin-bottom: 0;
}
.editor .ProseMirror > p {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
}
.editor .ProseMirror > p:first-child {
    margin-top: 0;
}
.editor .ProseMirror > p:last-child {
    margin-bottom: 0;
}
.editor .ProseMirror h1 {
    font-size: 1.875rem;
    line-height: 2.25rem;
}
.editor .ProseMirror h2 {
    font-size: 1.5rem;
    line-height: 2rem;
}
.editor .ProseMirror h3 {
    font-size: 1.25rem;
    line-height: 1.75rem;
}
.editor .ProseMirror h4 {
    font-size: 1.125rem;
    line-height: 1.75rem;
}
.editor .ProseMirror h5 {
    font-size: 1rem;
    line-height: 1.5rem;
}
.editor .ProseMirror h6 {
    font-size: 0.875rem;
    line-height: 1.25rem;
}
.editor .ProseMirror h1,
.editor .ProseMirror h2,
.editor .ProseMirror h3,
.editor .ProseMirror h4,
.editor .ProseMirror h5,
.editor .ProseMirror h6 {
    font-weight: 700;
}
.editor .ProseMirror h1:first-child,
.editor .ProseMirror h2:first-child,
.editor .ProseMirror h3:first-child,
.editor .ProseMirror h4:first-child,
.editor .ProseMirror h5:first-child,
.editor .ProseMirror h6:first-child {
    margin-top: 0;
}
.editor .ProseMirror h1:last-child,
.editor .ProseMirror h2:last-child,
.editor .ProseMirror h3:last-child,
.editor .ProseMirror h4:last-child,
.editor .ProseMirror h5:last-child,
.editor .ProseMirror h6:last-child {
    margin-bottom: 0;
}
.editor .ProseMirror h1,
.editor .ProseMirror h2,
.editor .ProseMirror h3 {
    margin-top: 3rem;
}
.editor .ProseMirror h4,
.editor .ProseMirror h5,
.editor .ProseMirror h6 {
    margin-top: 2rem;
}
.editor .ProseMirror a.link {
    font-weight: 800;
    --tw-text-opacity: 1;
    color: rgb(59 130 246 / var(--tw-text-opacity));
}
.editor :is(.dark .ProseMirror a.link) {
    --tw-text-opacity: 1;
    color: rgb(96 165 250 / var(--tw-text-opacity));
}
.editor .ProseMirror mark {
    border-radius: 0.125rem;
    --tw-bg-opacity: 1;
    background-color: rgb(239 68 68 / var(--tw-bg-opacity));
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
    padding: 0.25rem 0;
    color: inherit;
}
.editor :is(.dark .ProseMirror mark) {
    --tw-bg-opacity: 1;
    background-color: rgb(248 113 113 / var(--tw-bg-opacity));
}
/* .editor .ProseMirror img {
    height: auto;
    width: 100%;
    max-width: 100%;
} */
.editor .ProseMirror [data-type="horizontalRule"] {
    margin-top: 2rem;
    margin-bottom: 2rem;
    cursor: pointer;
    padding-top: 1rem;
    padding-bottom: 1rem;
    transition-property: all;
    transition-duration: 0.1s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    animation-duration: 0.1s;
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.editor .ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode {
    background-color: rgba(0, 0, 0, 0.05);
}
.editor :is(.dark .ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode) {
    background-color: rgba(255, 255, 255, 0.1);
}
.editor .ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode hr {
    border-top-color: rgba(0, 0, 0, 0.3);
}
.editor :is(.dark .ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode hr) {
    border-top-color: rgba(255, 255, 255, 0.3);
}
.editor .ProseMirror [data-type="horizontalRule"]:hover:not(.ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode) {
    background-color: rgba(0, 0, 0, 0.05);
}
.editor :is(.dark .ProseMirror [data-type="horizontalRule"]:hover:not(.ProseMirror [data-type="horizontalRule"].ProseMirror-selectednode)) {
    background-color: rgba(255, 255, 255, 0.1);
}
.editor .ProseMirror [data-type="horizontalRule"] hr {
    border-width: 1px 0 0;
    border-color: rgba(0, 0, 0, 0.2);
    background-color: rgba(0, 0, 0, 0.8);
}
.editor :is(.dark .ProseMirror [data-type="horizontalRule"] hr) {
    border-color: rgba(255, 255, 255, 0.2);
    background-color: rgba(255, 255, 255, 0.8);
}
.editor .ProseMirror {
    z-index: 0;
    caret-color: #000;
    outline-width: 0;
}
.editor :is(.dark .ProseMirror) {
    caret-color: #fff;
}
.editor .ProseMirror > * {
    margin-left: auto;
    margin-right: auto;
}
.editor .ProseMirror .selection {
    display: inline;
}
.editor .ProseMirror ::-moz-selection {
    background-color: rgba(0, 0, 0, 0.1);
}
.editor .ProseMirror .selection,
.editor .ProseMirror ::selection {
    background-color: rgba(0, 0, 0, 0.1);
}
.editor :is(.dark .ProseMirror *)::-moz-selection {
    background-color: rgba(255, 255, 255, 0.2);
}
.editor :is(.dark .ProseMirror *)::selection,
.editor :is(.dark .ProseMirror .selection) {
    background-color: rgba(255, 255, 255, 0.2);
}
.editor .ProseMirror > .react-renderer {
    margin-top: 3rem;
    margin-bottom: 3rem;
}
.editor .ProseMirror > .react-renderer:first-child {
    margin-top: 0;
}
.editor .ProseMirror > .react-renderer:last-child {
    margin-bottom: 0;
}
.editor .ProseMirror.resize-cursor {
    cursor: col-resize;
}
.editor .ProseMirror .ProseMirror-gapcursor {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    max-width: 1024px;
}
.editor .ProseMirror .ProseMirror-gapcursor:after {
    top: -1.5em;
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    max-width: 1024px;
    border-top-color: rgba(0, 0, 0, 0.4);
}
.editor :is(.dark .ProseMirror .ProseMirror-gapcursor):after {
    border-top-color: rgba(255, 255, 255, 0.4);
}
.editor [data-theme="slash-command"] {
    width: 1000vw;
}


.react-note-component-with-content {
    /* border: 3px solid #0D0D0D; */
    border-radius: 0.2rem;
    margin: 1rem 0;
    position: relative;
  
    /* .label {
      margin-left: 1rem;
      background-color: #0D0D0D;
      font-size: 0.6rem;
      letter-spacing: 1px;
      font-weight: bold;
      text-transform: uppercase;
      color: #fff;
      position: absolute;
      top: 0;
      padding: 0.25rem 0.75rem;
      border-radius: 0 0 0.5rem 0.5rem;
    } */
  
    .content {
      margin: 0.5rem 1rem 1rem;
      padding: 0.5rem;
      /* border: 2px dashed #0D0D0D20;
      border-radius: 0.5rem; */
    }
  }
  
