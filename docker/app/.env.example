# core database creds
DB_ADMIN_USERNAME=beskar_admin
DB_ADMIN_PASSWORD=beskar_admin_pwd
DB_HOST=postgres
DB_PORT=5432

# keycloak variables
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=admin
KC_DB=postgres
KC_DATABASE=auth
KC_DB_URL=jdbc:postgresql://postgres:5432/auth


# github creds
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

# hasura variables
## postgres database to store Hasura metadata
HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://beskar_admin:beskar_admin_pwd@postgres:5432/beskar
## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
PG_DATABASE_URL=postgres://beskar_admin:beskar_admin_pwd@postgres:5432/beskar
## enable the console served by server
HASURA_GRAPHQL_ENABLE_CONSOLE="true" # set to "false" to disable console
## enable debugging mode. It is recommended to disable this in production
HASURA_GRAPHQL_DEV_MODE="true"
HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup,http-log,webhook-log,websocket-log,query-log
## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
# HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
# HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "3aa52dfd53ea35e6fcc9cc38c3167aff" }'
HASURA_GRAPHQL_JWT_SECRET='{ "jwk_url": "http://shield:8080/realms/devbeskarrealm/protocol/openid-connect/certs" }'
## uncomment next line to set an admin secret
HASURA_GRAPHQL_ADMIN_SECRET=@HASURA_ADMIN_SECRET@
HASURA_GRAPHQL_METADATA_DEFAULTS='{"backend_configs":{}}'


#zitadel
ZITADEL_USER_PAT=

#redis
REDIS_PASSWORD=redis_secure_password
REDIS_HOST=tededox-redis
REDIS_PORT=6379
