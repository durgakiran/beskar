/* Beskar Editor Base Styles */
/* Theme variables are included at the top of the combined styles.css file */

/* Editor Container */
.beskar-editor {
  position: relative;
  height: 100%;
  width: 100%;
}

.beskar-editor .editor-content {
  height: 100%;
  width: 100%;
}

.beskar-editor .ProseMirror {
  height: 100%;
  margin-top: 0.75em;
  box-sizing: border-box;
  z-index: 0;
  caret-color: var(--editor-caret, #000);
  outline-width: 0;
  position: relative;
  /* padding-left: 2.75rem; */
}

.beskar-editor.dark .ProseMirror {
  caret-color: var(--editor-caret, #fff);
}

/* Block-based Editor Styling */
.beskar-editor .ProseMirror .block-node {
  position: relative;
  /* padding: 0.25rem 0; */
  /* margin: 0.375rem 0; */
  margin-bottom: 0px;
  box-sizing: border-box;
  border-radius: 0.25rem;
  transition: background-color 0.1s ease;
  border: 1px solid transparent;
}

/* .beskar-editor .ProseMirror .block-node:hover {
  background-color: rgba(0, 0, 0, 0.015);
}

.beskar-editor.dark .ProseMirror .block-node:hover {
  background-color: rgba(255, 255, 255, 0.015);
} */

/* Single Block Drag Handle (positioned via JS) */
.beskar-editor .block-drag-handle {
  /* Position, top, left, height set via JavaScript */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.25rem;
  height: 1.25rem !important; /* Fixed height for the handle */
  padding: 0;
  border-radius: 0.25rem;
  background-color: transparent;
  border: none;
  user-select: none;
  cursor: grab;
  transition: opacity 0.15s ease, background-color 0.15s ease;
  pointer-events: auto;
  
  /* 6-dot grid icon using radial gradients */
  background-image: 
    radial-gradient(circle, color-mix(in srgb, var(--editor-drag-handle-color, #646464) 40%, transparent) 1.5px, transparent 1.5px),
    radial-gradient(circle, color-mix(in srgb, var(--editor-drag-handle-color, #646464) 40%, transparent) 1.5px, transparent 1.5px),
    radial-gradient(circle, color-mix(in srgb, var(--editor-drag-handle-color, #646464) 40%, transparent) 1.5px, transparent 1.5px),
    radial-gradient(circle, color-mix(in srgb, var(--editor-drag-handle-color, #646464) 40%, transparent) 1.5px, transparent 1.5px),
    radial-gradient(circle, color-mix(in srgb, var(--editor-drag-handle-color, #646464) 40%, transparent) 1.5px, transparent 1.5px),
    radial-gradient(circle, color-mix(in srgb, var(--editor-drag-handle-color, #646464) 40%, transparent) 1.5px, transparent 1.5px);
  background-size: 4px 4px;
  background-position: 
    4px 4px,
    10px 4px,
    4px 10px,
    10px 10px,
    4px 16px,
    10px 16px;
  background-repeat: no-repeat;
}

.beskar-editor.dark .block-drag-handle {
  /* Dark mode uses the same variable, which is already overridden in theme.css */
}

.beskar-editor .block-drag-handle:hover {
  opacity: 1 !important;
  background-color: var(--editor-bg-hover, rgba(0, 0, 0, 0.05));
}

.beskar-editor.dark .block-drag-handle:hover {
  opacity: 1 !important;
  background-color: var(--editor-bg-hover, rgba(255, 255, 255, 0.05));
}

.beskar-editor .block-drag-handle:active {
  transform: scale(0.95);
  background-color: var(--editor-bg-active, rgba(0, 0, 0, 0.08));
  cursor: grabbing;
}

.beskar-editor.dark .block-drag-handle:active {
  background-color: var(--editor-bg-active, rgba(255, 255, 255, 0.08));
}

.beskar-editor .block-drag-handle:focus-visible {
  outline: 2px solid var(--editor-focus-ring, rgba(14, 165, 233, 0.6));
  outline-offset: 2px;
}

/* Hide drag handles in read-only mode */
.beskar-editor .ProseMirror[contenteditable="false"] ~ .block-drag-handle,
.beskar-editor.readonly .block-drag-handle {
  display: none !important;
  pointer-events: none !important;
}

/* Dragging state */
.beskar-editor .ProseMirror .block-node.dragging {
  opacity: 0.5;
  background-color: var(--editor-drag-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 5%, transparent));
}

.beskar-editor.dark .ProseMirror .block-node.dragging {
  background-color: var(--editor-drag-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 5%, transparent));
}

/* Drop indicators */
.beskar-editor .ProseMirror .block-node.drag-over-top::before,
.beskar-editor .ProseMirror .block-node.drag-over-bottom::after {
  content: '';
  position: absolute;
  left: -2rem;
  width: calc(100% + 4rem);
  height: 3px;
  background: color-mix(in srgb, var(--editor-drag-indicator, var(--editor-accent, #0ea5e9)) 60%, transparent);
  border-radius: 2px;
  pointer-events: none;
  box-shadow: 0 0 6px color-mix(in srgb, var(--editor-drag-indicator, var(--editor-accent, #0ea5e9)) 40%, transparent);
}

.beskar-editor.dark .ProseMirror .block-node.drag-over-top::before,
.beskar-editor.dark .ProseMirror .block-node.drag-over-bottom::after {
  background: color-mix(in srgb, var(--editor-drag-indicator, var(--editor-accent, #0ea5e9)) 70%, transparent);
  box-shadow: 0 0 6px color-mix(in srgb, var(--editor-drag-indicator, var(--editor-accent, #0ea5e9)) 50%, transparent);
}

.beskar-editor .ProseMirror .block-node.drag-over-top::before {
  top: -4px;
}

.beskar-editor .ProseMirror .block-node.drag-over-bottom::after {
  bottom: -4px;
}

/* Block selection styling */
.beskar-editor .ProseMirror .block-node.ProseMirror-selectednode {
  outline: 0.5px solid color-mix(in srgb, var(--editor-selection-outline, var(--editor-accent, #0ea5e9)) 30%, transparent);
  border-radius: 0.375rem;
}

.beskar-editor.dark .ProseMirror .block-node.ProseMirror-selectednode {
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 10%, transparent));
  outline-color: color-mix(in srgb, var(--editor-selection-outline, var(--editor-accent, #0ea5e9)) 30%, transparent);
}

/* Typography */
.beskar-editor .ProseMirror p {
  margin-top: 0.75rem;
  /* margin-bottom: 0.375rem; */
  line-height: 1.625;
  margin-bottom: 0px;
  margin-left: 0px;
  margin-right: 0px;
}

.beskar-editor .ProseMirror p:first-child {
  margin-top: 0;
}

.beskar-editor .ProseMirror p:last-child {
  margin-bottom: 0;
}

/* Headings */
.beskar-editor .ProseMirror h1 { font-size: 1.875rem; line-height: 2.25rem; margin-top: 1.5rem; }
.beskar-editor .ProseMirror h2 { font-size: 1.5rem; line-height: 2rem; margin-top: 1.4rem; }
.beskar-editor .ProseMirror h3 { font-size: 1.25rem; line-height: 1.75rem; margin-top: 1.3rem; }
.beskar-editor .ProseMirror h4 { font-size: 1.125rem; line-height: 1.75rem; margin-top: 1.2rem; }
.beskar-editor .ProseMirror h5 { font-size: 1rem; line-height: 1.5rem; margin-top: 1.1rem; }
.beskar-editor .ProseMirror h6 { font-size: 0.875rem; line-height: 1.25rem; margin-top: 1rem; }

.beskar-editor .ProseMirror h1,
.beskar-editor .ProseMirror h2,
.beskar-editor .ProseMirror h3,
.beskar-editor .ProseMirror h4,
.beskar-editor .ProseMirror h5,
.beskar-editor .ProseMirror h6 {
  font-weight: 700;
  /* margin-top: 0.75rem;
  margin-bottom: 0.375rem; */
  margin-bottom: 0px;
  margin-left: 0px;
  margin-right: 0px;
}

/* Lists */
.beskar-editor .ProseMirror ol,
.beskar-editor .ProseMirror ul {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
  padding-left: 0;
  margin-left: 2rem;
  list-style-position: outside;
}

.beskar-editor .ProseMirror ol { list-style-type: decimal; }
.beskar-editor .ProseMirror ul { list-style-type: disc; }

.beskar-editor .ProseMirror ol li,
.beskar-editor .ProseMirror ul li {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  padding-left: 0.5rem;
}

/* Override block-node styles for list items */
.beskar-editor .ProseMirror li.block-node {
  padding-left: 0.5rem !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
  margin: 0.25rem 0 !important;
  border: none !important;
  background: transparent !important;
}

/* Nested lists - align bullet with parent text */
.beskar-editor .ProseMirror li > ol,
.beskar-editor .ProseMirror li > ul {
  margin-top: 0.5rem;
  margin-bottom: 0.25rem;
  margin-left: 0;
  padding-left: 0;
}

/* Different bullet styles for nested unordered lists */
.beskar-editor .ProseMirror ul ul {
  list-style-type: circle;
  margin-left: 1rem !important;
  box-sizing: border-box;
}

.beskar-editor .ProseMirror ul ul ul {
  list-style-type: square;
  margin-left: 1rem !important;
  box-sizing: border-box;
}

/* Different number styles for nested ordered lists */
.beskar-editor .ProseMirror ol ol {
  list-style-type: lower-alpha;
  margin-left: 1rem !important;
  box-sizing: border-box;
}

.beskar-editor .ProseMirror ol ol ol {
  list-style-type: lower-roman;
  margin-left: 1rem !important;
  box-sizing: border-box;
}

/* Task Lists */
.beskar-editor .ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
  margin: 1.5rem 0;
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  margin: 0.25rem 0;
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li > label {
  flex: 0 0 auto;
  margin-right: 0;
  margin-top: 0.125rem;
  user-select: none;
  line-height: 1.4;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"] {
  width: 1.125rem;
  height: 1.125rem;
  min-width: 1.125rem;
  min-height: 1.125rem;
  cursor: pointer;
  margin: 0;
  accent-color: var(--editor-accent, #0ea5e9);
  flex-shrink: 0;
  border: 2px solid var(--editor-border-default, #d9d9d9);
  border-radius: 0.25rem;
  background-color: transparent;
  appearance: none;
  -webkit-appearance: none;
  position: relative;
  transition: all 0.15s ease;
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:hover {
  border-color: var(--editor-accent, #0ea5e9);
  background-color: var(--editor-bg-hover, rgba(0, 0, 0, 0.02));
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:checked {
  background-color: var(--editor-accent, #0ea5e9);
  border-color: var(--editor-accent, #0ea5e9);
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:checked::before {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
  width: 0.35rem;
  height: 0.7rem;
  border: solid white;
  border-width: 0 2px 2px 0;
  box-sizing: border-box;
}

.dark .beskar-editor .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"] {
  border-color: var(--editor-border-default, #525252);
}

.dark .beskar-editor .ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:hover {
  border-color: var(--editor-accent, #0ea5e9);
  background-color: var(--editor-bg-hover, rgba(255, 255, 255, 0.02));
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li > div {
  flex: 1 1 auto;
  min-width: 0;
}

.beskar-editor .ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div {
  text-decoration-line: line-through;
  color: var(--editor-text-tertiary, rgba(0, 0, 0, 0.5));
  opacity: 0.7;
}

.dark .beskar-editor .ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div {
  color: var(--editor-text-tertiary, rgba(255, 255, 255, 0.5));
}

/* Code */
.beskar-editor .ProseMirror code {
  border-radius: 0.125rem;
  background-color: var(--editor-code-inline-bg, #171717);
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
  color: var(--editor-code-inline-text, #fff);
  padding: 0.1rem 0.4rem;
}


/* Syntax Highlighting for Code Blocks (lowlight) - Tiptap Example Colors */
.beskar-editor .ProseMirror pre {
  background: var(--editor-code-bg, #0d0d0d);
  color: var(--editor-code-text, #fff);
  font-family: 'JetBrainsMono', monospace;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
  margin: 1.5rem 0;
}

.beskar-editor .ProseMirror pre code {
  color: inherit;
  padding: 0;
  background: none;
  font-size: 0.8rem;
}

.beskar-editor .ProseMirror pre .hljs-comment,
.beskar-editor .ProseMirror pre .hljs-quote {
  color: #616161;
}

.beskar-editor .ProseMirror pre .hljs-variable,
.beskar-editor .ProseMirror pre .hljs-template-variable,
.beskar-editor .ProseMirror pre .hljs-attribute,
.beskar-editor .ProseMirror pre .hljs-tag,
.beskar-editor .ProseMirror pre .hljs-name,
.beskar-editor .ProseMirror pre .hljs-regexp,
.beskar-editor .ProseMirror pre .hljs-link,
.beskar-editor .ProseMirror pre .hljs-selector-id,
.beskar-editor .ProseMirror pre .hljs-selector-class {
  color: #f98181;
}

.beskar-editor .ProseMirror pre .hljs-number,
.beskar-editor .ProseMirror pre .hljs-meta,
.beskar-editor .ProseMirror pre .hljs-built_in,
.beskar-editor .ProseMirror pre .hljs-builtin-name,
.beskar-editor .ProseMirror pre .hljs-literal,
.beskar-editor .ProseMirror pre .hljs-type,
.beskar-editor .ProseMirror pre .hljs-params {
  color: #fbbc88;
}

.beskar-editor .ProseMirror pre .hljs-string,
.beskar-editor .ProseMirror pre .hljs-symbol,
.beskar-editor .ProseMirror pre .hljs-bullet {
  color: #b9f18d;
}

.beskar-editor .ProseMirror pre .hljs-title,
.beskar-editor .ProseMirror pre .hljs-section {
  color: #faf594;
}

.beskar-editor .ProseMirror pre .hljs-keyword,
.beskar-editor .ProseMirror pre .hljs-selector-tag {
  color: #70cff8;
}

.beskar-editor .ProseMirror pre .hljs-emphasis {
  font-style: italic;
}

.beskar-editor .ProseMirror pre .hljs-strong {
  font-weight: 700;
}

/* Details/Summary (collapsible) */
/* TipTap Details extension creates a div[data-type="details"] wrapper */
.beskar-editor .ProseMirror div[data-type="details"] {
  margin: 1rem 0;
  padding: 1rem;
  border: 1px solid var(--editor-border-default, #e5e7eb);
  border-radius: 0.5rem;
  background: var(--editor-gray-2, #f9f9f9);
  position: relative;
}

.beskar-editor.dark .ProseMirror div[data-type="details"] {
  background: var(--editor-gray-3, #1f1f1f);
  border-color: var(--editor-border-default, #374151);
}

.beskar-editor .ProseMirror div[data-type="details"] {
  display: flex;
  gap: 0.25rem;
  margin: 1.5rem 0px;
  border: 1px solid var(--gray-3);
  border-radius: 0.5rem;
  padding: 0.5rem;
}


/* TipTap Details extension creates a button element for toggling */
.beskar-editor .ProseMirror div[data-type="details"] > button {
  align-items: center;
  background: transparent;
  border-radius: 4px;
  display: flex;
  font-size: 0.625rem;
  height: 1.25rem;
  justify-content: center;
  line-height: 1;
  margin-top: 0.1rem;
  padding: 0px;
  width: 1.25rem;
  border: none;
}

/* Custom icon using ::before pseudo-element on the button */
.beskar-editor .ProseMirror div[data-type="details"] > button::before {
  content: '▶';
  display: inline-block;
  font-size: 0.75rem;
  line-height: 1;
  color: var(--editor-text-primary, #000);
  transition: transform 0.2s ease;
}

.beskar-editor.dark .ProseMirror div[data-type="details"] > button::before {
  color: var(--editor-text-primary, #fff);
}

.beskar-editor .ProseMirror div[data-type="details"].is-open > button::before {
  transform: rotate(90deg);
}

.beskar-editor .ProseMirror div[data-type="details"]:not(.is-open) > button::before {
  transform: rotate(0deg);
}

.beskar-editor .ProseMirror details summary {
  cursor: pointer;
  user-select: none;
  padding: 0;
  margin: 0;
  list-style: none;
  display: inline;
}

/* Hide default summary marker */
.beskar-editor .ProseMirror details summary::-webkit-details-marker {
  display: none !important;
}

.beskar-editor .ProseMirror details summary::marker {
  display: none !important;
  content: none !important;
}

.beskar-editor .ProseMirror details summary:hover {
  color: var(--editor-text-primary, #000);
}

.beskar-editor.dark .ProseMirror details summary:hover {
  color: var(--editor-text-primary, #fff);
}

.beskar-editor .ProseMirror details[open] .details-content {
  margin-top: 0.75rem;
  padding-top: 0.75rem;
  border-top: 1px solid var(--editor-border-subtle, rgba(0, 0, 0, 0.1));
}

.beskar-editor.dark .ProseMirror details[open] .details-content {
  border-top-color: var(--editor-border-subtle, rgba(255, 255, 255, 0.1));
}

/* Blockquote */
.beskar-editor .ProseMirror blockquote {
  margin: 1.5rem 0 !important;
  padding: 1rem 1.5rem !important;
  padding-left: 1.5rem !important;
  border-left: 2px solid var(--editor-border-default, rgba(0, 0, 0, 0.2)) !important;
  background-color: transparent !important;
  border-radius: 0 !important;
  font-style: italic !important;
  color: var(--editor-text-primary, rgba(0, 0, 0, 0.9)) !important;
  position: relative !important;
}

.beskar-editor .ProseMirror blockquote p {
  margin: 0 !important;
  line-height: 1.6 !important;
}

.beskar-editor .ProseMirror blockquote p:not(:last-child) {
  margin-bottom: 0.75rem !important;
}

.dark .beskar-editor .ProseMirror blockquote {
  border-left-color: var(--editor-border-default, rgba(255, 255, 255, 0.2)) !important;
  color: var(--editor-text-primary, rgba(255, 255, 255, 0.9)) !important;
}

/* Horizontal Rule */
.beskar-editor .ProseMirror hr {
  border: none !important; /* Remove default border */
  border-top: 2px solid var(--editor-border-default, rgba(0, 0, 0, 0.2)) !important; /* Custom top border */
  margin: 2rem 0;
  height: 0; /* Ensure no height from default hr */
  background: none; /* Remove default background */
  padding: 0; /* Remove default padding */
}

.dark .beskar-editor .ProseMirror hr {
  border-top-color: var(--editor-border-default, rgba(255, 255, 255, 0.2)) !important;
}

/* Tables */
.beskar-editor .ProseMirror .tableWrapper {
  margin: 2rem 0;
  position: relative;
  border: 1px solid transparent;
  border-radius: 0.5rem;
  cursor: pointer;
}

/* Table block-node specific styling */
.beskar-editor .ProseMirror .tableWrapper.block-node {
  padding: 0 !important;
  margin: 1.5rem 0 0 0 !important;
  background: transparent !important;
}

.beskar-editor .ProseMirror .tableWrapper.block-node:hover {
  background: transparent !important;
}

/* Hide grip handles during drag to prevent interference */
.beskar-editor .ProseMirror .tableWrapper.dragging .grip-column,
.beskar-editor .ProseMirror .tableWrapper.dragging .grip-row {
  display: none !important;
}

/* Maintain table structure during drag */
.beskar-editor .ProseMirror .tableWrapper.dragging table {
  table-layout: fixed;
  width: 100%;
}

.beskar-editor .ProseMirror .tableWrapper.dragging table td,
.beskar-editor .ProseMirror .tableWrapper.dragging table th {
  overflow: hidden;
}

.beskar-editor .ProseMirror table {
  box-sizing: border-box;
  width: 100%;
  border-collapse: collapse;
  border-radius: 0.25rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.beskar-editor .ProseMirror table td,
.beskar-editor .ProseMirror table th {
  position: relative;
  min-width: 100px;
  border: 1px solid rgba(0, 0, 0, 0.1);
  padding: 0.5rem;
  text-align: left;
  vertical-align: top;
  cursor: text;
}

.beskar-editor .ProseMirror table th {
  font-weight: 700;
}

.beskar-editor .ProseMirror table .selectedCell {
  outline: 3px solid var(--editor-selection-outline, var(--editor-accent, #0ea5e9)) !important;
  outline-offset: -2px;
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 5%, transparent));
  position: relative;
  z-index: 1;
}

/* Table Grip Handles */
.beskar-editor .ProseMirror table .grip-column,
.beskar-editor .ProseMirror table .grip-row {
  position: absolute;
  z-index: 100;
  display: flex;
  cursor: pointer;
  align-items: center;
}

.beskar-editor.dark .ProseMirror table .grip-column,
.beskar-editor.dark .ProseMirror table .grip-row {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Column Grip */
.beskar-editor .ProseMirror table .grip-column {
  left: 0;
  top: -0.75rem;
  margin-left: -1px;
  height: 0.75rem;
  width: calc(100% + 1px);
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
}

.beskar-editor.dark .ProseMirror table .grip-column {
  border-color: rgba(255, 255, 255, 0.2);
}

/* .beskar-editor .ProseMirror table .grip-column.selected:before,
.beskar-editor .ProseMirror table .grip-column:hover:before {
  content: "";
  width: 0.625rem;
} */

.beskar-editor .ProseMirror table .grip-column:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.beskar-editor.dark .ProseMirror table .grip-column:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

/* .beskar-editor .ProseMirror table .grip-column:hover:before {
  border-bottom: 2px dotted rgba(0, 0, 0, 0.6);
} */

/* .beskar-editor.dark .ProseMirror table .grip-column:hover:before {
  border-color: rgba(255, 255, 255, 0.6);
} */

.beskar-editor .ProseMirror table .grip-column.first {
  border-top-left-radius: 0.125rem;
  border-color: transparent;
}

.beskar-editor .ProseMirror table .grip-column.last {
  border-top-right-radius: 0.125rem;
}

.beskar-editor .ProseMirror table .grip-column.selected {
  border-color: rgba(0, 0, 0, 0.3);
  background-color: rgba(0, 0, 0, 0.3);
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

.beskar-editor.dark .ProseMirror table .grip-column.selected {
  border-color: rgba(255, 255, 255, 0.3);
  background-color: rgba(255, 255, 255, 0.3);
}

.beskar-editor .ProseMirror table .grip-column.selected:before {
  border-bottom: 2px dotted;
}

/* Row Grip */
.beskar-editor .ProseMirror table .grip-row {
  left: -0.75rem;
  top: 0;
  margin-top: -1px;
  height: calc(100% + 1px);
  width: 0.75rem;
  border-right: 1px solid rgba(0, 0, 0, 0.2);
}

.beskar-editor.dark .ProseMirror table .grip-row {
  border-color: rgba(255, 255, 255, 0.2);
}

/* .beskar-editor .ProseMirror table .grip-row.selected:before,
.beskar-editor .ProseMirror table .grip-row:hover:before {
  height: 0.625rem;
  content: "";
} */

.beskar-editor .ProseMirror table .grip-row:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

.beskar-editor.dark .ProseMirror table .grip-row:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

/* .beskar-editor .ProseMirror table .grip-row:hover:before {
  border-left: 2px dotted rgba(0, 0, 0, 0.6);
} */

/* .beskar-editor.dark .ProseMirror table .grip-row:hover:before {
  border-color: rgba(255, 255, 255, 0.6);
} */

.beskar-editor .ProseMirror table .grip-row.first {
  border-top-left-radius: 0.125rem;
  border-color: transparent;
}

.beskar-editor .ProseMirror table .grip-row.last {
  border-bottom-left-radius: 0.125rem;
}

.beskar-editor .ProseMirror table .grip-row.selected {
  border-color: rgba(0, 0, 0, 0.3);
  background-color: rgba(0, 0, 0, 0.3);
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

.beskar-editor.dark .ProseMirror table .grip-row.selected {
  border-color: rgba(255, 255, 255, 0.3);
  background-color: rgba(255, 255, 255, 0.3);
}

.beskar-editor .ProseMirror table .grip-row.selected:before {
  border-left: 2px dotted;
}

/* Collaboration Cursors */
.beskar-editor .ProseMirror .collaboration-cursor__caret {
  pointer-events: none;
  position: relative;
  margin-left: -1px;
  margin-right: -1px;
  border-right: 1px solid;
  border-left: 1px solid;
}

.beskar-editor .ProseMirror .collaboration-cursor__label {
  position: absolute;
  left: -1px;
  top: -1.4em;
  user-select: none;
  white-space: nowrap;
  border-radius: 0.25rem;
  border-top-left-radius: 0;
  padding: 0.125rem 0.375rem;
  font-size: 0.75rem;
  font-weight: 600;
  line-height: 1;
  color: #000;
}

/* Placeholder */
.beskar-editor .ProseMirror .is-empty::before {
  pointer-events: none;
  float: left;
  height: 0;
  width: 100%;
  color: rgba(0, 0, 0, 0.4);
  content: attr(data-placeholder);
}

.beskar-editor.dark .ProseMirror .is-empty::before {
  color: rgba(255, 255, 255, 0.4);
}

/* Selection */
.beskar-editor .ProseMirror ::selection {
  background-color: rgba(0, 0, 0, 0.1);
}

.beskar-editor.dark .ProseMirror ::selection {
  background-color: rgba(255, 255, 255, 0.2);
}

/* Gap Cursor */
.beskar-editor .ProseMirror .ProseMirror-gapcursor {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
}

.beskar-editor .ProseMirror .ProseMirror-gapcursor::after {
  border-top-color: rgba(0, 0, 0, 0.4);
}

.beskar-editor.dark .ProseMirror .ProseMirror-gapcursor::after {
  border-top-color: rgba(255, 255, 255, 0.4);
}

/* Focus States */
.beskar-editor .ProseMirror:focus {
  outline: none;
}

/* Custom Input Node */
.react-note-component-with-content {
  border-radius: 0.2rem;
  margin: 1rem 0;
  position: relative;
}

.react-note-component-with-content .content {
  margin: 0.5rem 1rem 1rem;
  padding: 0.5rem;
}

/* Emoji Node Styling */
.beskar-editor .ProseMirror .emoji-node {
  display: inline-block;
  line-height: 1;
  font-size: 1.25em;
  vertical-align: baseline;
  margin: 0 0.05em;
  user-select: all;
  -webkit-user-select: all;
}

/* Emoji fallback images */
.beskar-editor .ProseMirror .emoji-node img {
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  vertical-align: text-bottom;
  object-fit: contain;
}

/* Emoji in headings - scale appropriately */
.beskar-editor .ProseMirror h1 .emoji-node {
  font-size: 1.2em;
}

.beskar-editor .ProseMirror h2 .emoji-node {
  font-size: 1.15em;
}

.beskar-editor .ProseMirror h3 .emoji-node {
  font-size: 1.1em;
}

/* Emoji selection - highlight the entire emoji */
.beskar-editor .ProseMirror .emoji-node.ProseMirror-selectednode {
  outline: 2px solid #68cef8;
  outline-offset: 2px;
  border-radius: 2px;
  background-color: rgba(104, 206, 248, 0.1);
}

/* ===========================
   Table Controls Styles
   =========================== */

/* Row Grip Handles */
.grip-row {
  position: absolute;
  left: -2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 0.25rem;
  cursor: pointer;
  opacity: 0.4;
  transition: opacity 0.15s ease, background-color 0.15s ease;
  z-index: 10;
  pointer-events: auto;
}

.grip-row:hover,
.grip-row.selected {
  opacity: 1 !important;
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .grip-row:hover,
.dark .grip-row.selected {
  background-color: rgba(255, 255, 255, 0.05);
}

/* Show row grip on row hover */
tr:hover .grip-row {
  opacity: 1;
}

/* Row highlighting removed - individual cell styling is sufficient */
/* The selectedCell class on each cell provides the blue border */

/* Column Grip Handles */
.grip-column {
  position: absolute;
  top: -1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 0.25rem;
  cursor: pointer;
  opacity: 0.4;
  transition: opacity 0.15s ease, background-color 0.15s ease;
  z-index: 10;
  pointer-events: auto;
}

.grip-column:hover,
.grip-column.selected {
  opacity: 1 !important;
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .grip-column:hover,
.dark .grip-column.selected {
  background-color: rgba(255, 255, 255, 0.05);
}

/* Show column grip on column hover - using nth-child */
th:hover .grip-column,
td:hover .grip-column {
  opacity: 1;
}

/* Highlight selected column with blue border */
th.selectedCell,
td.selectedCell {
  outline: 3px solid var(--editor-selection-outline, var(--editor-accent, #0ea5e9)) !important;
  outline-offset: -2px;
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 5%, transparent));
  position: relative;
  z-index: 1;
}

/* Row and Column Drag Handle Triggers */
.row-drag-handle-trigger,
.column-drag-handle-trigger {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  border: none;
  background: transparent;
  color: rgba(0, 0, 0, 0.5);
  cursor: pointer;
  padding: 0;
  border-radius: 0.25rem;
  transition: background-color 0.15s ease, color 0.15s ease;
}

.row-drag-handle-trigger:hover,
.column-drag-handle-trigger:hover {
  background-color: rgba(0, 0, 0, 0.1);
  color: rgba(0, 0, 0, 0.8);
}

.dark .row-drag-handle-trigger,
.dark .column-drag-handle-trigger {
  color: rgba(255, 255, 255, 0.5);
}

.dark .row-drag-handle-trigger:hover,
.dark .column-drag-handle-trigger:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.8);
}

/* Table Dropdown Menu */
.table-dropdown-content {
  min-width: 200px;
  background-color: white;
  border-radius: 0.5rem;
  padding: 0.25rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border: 1px solid rgba(0, 0, 0, 0.1);
  z-index: 1000;
}

.dark .table-dropdown-content {
  background-color: #1f1f1f;
  border-color: rgba(255, 255, 255, 0.1);
}

.table-dropdown-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  border-radius: 0.375rem;
  cursor: pointer;
  user-select: none;
  outline: none;
  color: rgba(0, 0, 0, 0.9);
  transition: background-color 0.15s ease;
}

.dark .table-dropdown-item {
  color: rgba(255, 255, 255, 0.9);
}

.table-dropdown-item:hover,
.table-dropdown-item:focus {
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .table-dropdown-item:hover,
.dark .table-dropdown-item:focus {
  background-color: rgba(255, 255, 255, 0.05);
}

.table-dropdown-item.danger {
  color: #dc2626;
}

.dark .table-dropdown-item.danger {
  color: #f87171;
}

.table-dropdown-item.danger:hover {
  background-color: rgba(220, 38, 38, 0.1);
}

.dark .table-dropdown-item.danger:hover {
  background-color: rgba(248, 113, 113, 0.1);
}

.table-dropdown-item[data-disabled] {
  opacity: 0.5;
  pointer-events: none;
}

.table-dropdown-item .submenu-arrow {
  margin-left: auto;
}

.table-dropdown-separator {
  height: 1px;
  background-color: rgba(0, 0, 0, 0.1);
  margin: 0.25rem 0;
}

.dark .table-dropdown-separator {
  background-color: rgba(255, 255, 255, 0.1);
}

.table-dropdown-arrow {
  fill: white;
}

.dark .table-dropdown-arrow {
  fill: #1f1f1f;
}

/* Color Picker */
.table-color-picker-wrapper {
  padding: 0.5rem;
}

.table-color-picker {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.table-color-picker-content {
  background-color: white;
  border-radius: 0.5rem;
  padding: 0.75rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border: 1px solid rgba(0, 0, 0, 0.1);
  z-index: 1001;
}

.dark .table-color-picker-content {
  background-color: #1f1f1f;
  border-color: rgba(255, 255, 255, 0.1);
}

.color-grid {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 0.5rem;
  margin-bottom: 0.75rem;
}

.color-swatch {
  width: 2rem;
  height: 2rem;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: transform 0.15s ease, box-shadow 0.15s ease;
  border: 1px solid rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
}

.color-swatch:hover {
  transform: scale(1.1);
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}

.custom-color-input {
  display: flex;
  gap: 0.5rem;
}

.custom-color-input input {
  flex: 1;
  padding: 0.375rem 0.5rem;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0.375rem;
  font-size: 0.875rem;
  outline: none;
  background-color: white;
  color: rgba(0, 0, 0, 0.9);
}

.dark .custom-color-input input {
  background-color: #2a2a2a;
  border-color: rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.9);
}

.custom-color-input input:focus {
  border-color: var(--editor-focus-ring, color-mix(in srgb, var(--editor-accent, #0ea5e9) 50%, transparent));
}

.custom-color-input button {
  padding: 0.375rem 0.75rem;
  border: none;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  background-color: var(--editor-accent, #0ea5e9);
  color: var(--editor-accent-contrast, white);
  cursor: pointer;
  transition: background-color 0.15s ease;
}

.custom-color-input button:hover {
  background-color: var(--editor-accent-8, #0369a1);
}

.table-color-picker-arrow {
  fill: white;
}

.dark .table-color-picker-arrow {
  fill: #1f1f1f;
}

/* Table Toolbar */
.table-toolbar {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.dark .table-toolbar {
  background-color: #1f1f1f;
  border-color: rgba(255, 255, 255, 0.1);
}

.table-toolbar-button,
.table-toolbar-toggle {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  border: none;
  border-radius: 0.375rem;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.9);
  cursor: pointer;
  user-select: none;
  outline: none;
  transition: background-color 0.15s ease;
  white-space: nowrap;
}

.dark .table-toolbar-button,
.dark .table-toolbar-toggle {
  color: rgba(255, 255, 255, 0.9);
}

.table-toolbar-button:hover,
.table-toolbar-toggle:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .table-toolbar-button:hover,
.dark .table-toolbar-toggle:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

.table-toolbar-toggle[data-state="on"] {
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 10%, transparent));
  color: var(--editor-accent, #0ea5e9);
}

.dark .table-toolbar-toggle[data-state="on"] {
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 20%, transparent));
  color: var(--editor-accent-4, #7dd3fc);
}

.table-toolbar-button.danger {
  color: #dc2626;
}

.dark .table-toolbar-button.danger {
  color: #f87171;
}

.table-toolbar-button.danger:hover {
  background-color: rgba(220, 38, 38, 0.1);
}

.dark .table-toolbar-button.danger:hover {
  background-color: rgba(248, 113, 113, 0.1);
}

.table-toolbar-separator {
  width: 1px;
  height: 1.5rem;
  background-color: rgba(0, 0, 0, 0.1);
}

.dark .table-toolbar-separator {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Table Toolbar Floating Menu - Match Note Block Design */
.table-toolbar-floating-menu {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.375rem 0.5rem;
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.dark .table-toolbar-floating-menu {
  background-color: #1f1f1f;
  border-color: rgba(255, 255, 255, 0.1);
}

/* Table Floating Menu Container */
.table-floating-menu-container {
  pointer-events: auto;
  animation: tableMenuFadeIn 0.15s ease;
}

@keyframes tableMenuFadeIn {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(-4px);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

.table-floating-menu-container * {
  pointer-events: auto;
}

/* Table Floating Menu Buttons - Match Note Block */
.table-toolbar-floating-menu .table-toolbar-button,
.table-toolbar-floating-menu .table-toolbar-toggle {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.375rem 0.625rem;
  font-size: 0.875rem;
  border: none;
  border-radius: 0.375rem;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.7);
  cursor: pointer;
  transition: all 0.15s ease;
  white-space: nowrap;
}

.dark .table-toolbar-floating-menu .table-toolbar-button,
.dark .table-toolbar-floating-menu .table-toolbar-toggle {
  color: rgba(255, 255, 255, 0.7);
}

.table-toolbar-floating-menu .table-toolbar-button:hover,
.table-toolbar-floating-menu .table-toolbar-toggle:hover {
  background-color: rgba(0, 0, 0, 0.05);
  color: rgba(0, 0, 0, 0.9);
}

.dark .table-toolbar-floating-menu .table-toolbar-button:hover,
.dark .table-toolbar-floating-menu .table-toolbar-toggle:hover {
  background-color: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.9);
}

.table-toolbar-floating-menu .table-toolbar-toggle[data-state="on"] {
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 10%, transparent));
  color: var(--editor-accent, #0ea5e9);
}

.dark .table-toolbar-floating-menu .table-toolbar-toggle[data-state="on"] {
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 20%, transparent));
  color: var(--editor-accent-4, #7dd3fc);
}

.table-toolbar-floating-menu .table-toolbar-button svg,
.table-toolbar-floating-menu .table-toolbar-toggle svg {
  flex-shrink: 0;
}

/* Row Numbers Column (actual first column) */
.tableWrapper.show-row-numbers td:first-child,
.tableWrapper.show-row-numbers th:first-child {
  background-color: #f8f9fa;
  color: rgba(0, 0, 0, 0.5);
  font-size: 0.875rem;
  font-weight: 500;
  text-align: center;
  min-width: 50px;
  width: 50px;
  max-width: 50px;
  user-select: none;
  pointer-events: none;
  border-right: 2px solid #e0e0e0;
}

.dark .tableWrapper.show-row-numbers td:first-child,
.dark .tableWrapper.show-row-numbers th:first-child {
  background-color: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.5);
  border-right-color: rgba(255, 255, 255, 0.15);
}

/* Hide column drag handle for row numbers column */
.tableWrapper.show-row-numbers th:first-child .grip-column,
.tableWrapper.show-row-numbers td:first-child .grip-column {
  display: none;
}

/* Column Resizing */
.beskar-editor .ProseMirror .resize-handle {
  position: absolute;
  right: -2px;
  top: 0;
  bottom: -2px;
  width: 4px;
  cursor: col-resize;
  background-color: transparent;
  z-index: 20;
}

.beskar-editor .ProseMirror .resize-handle:hover {
  background-color: color-mix(in srgb, var(--editor-accent, #0ea5e9) 50%, transparent);
}

.beskar-editor .ProseMirror .selectedCell .resize-handle {
  background-color: color-mix(in srgb, var(--editor-accent, #0ea5e9) 30%, transparent);
}

.dark .beskar-editor .ProseMirror .resize-handle:hover {
  background-color: color-mix(in srgb, var(--editor-accent-4, #7dd3fc) 50%, transparent);
}

.dark .beskar-editor .ProseMirror .selectedCell .resize-handle {
  background-color: color-mix(in srgb, var(--editor-accent-4, #7dd3fc) 30%, transparent);
}

/* Table cell positioning for resize handles */
.beskar-editor .ProseMirror table td,
.beskar-editor .ProseMirror table th {
  position: relative;
}

/* Prevent text selection during resize */
.beskar-editor .ProseMirror.resize-cursor {
  cursor: col-resize;
}

.beskar-editor .ProseMirror.resize-cursor * {
  cursor: col-resize !important;
}

/* ===========================
   Note Block Styles
   =========================== */

/* Note Block Wrapper */
.note-block-wrapper {
  display: block;
  margin: 1.5rem 0 0 0;
  position: relative;
}

/* Note Block Content Wrapper */
.note-block-content-wrapper {
  display: flex;
  align-items: flex-start;
  gap: 0.75rem;
  padding: 1rem;
  border-left: 4px solid rgba(0, 0, 0, 0.2);
  border-radius: 0.5rem;
  transition: all 0.15s ease;
}

.note-block-content-wrapper:hover {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

/* Theme-specific border colors */
.note-block-wrapper[data-theme="info"] .note-block-content-wrapper {
  border-left-color: var(--editor-info, var(--editor-accent, #0ea5e9));
}

.note-block-wrapper[data-theme="note"] .note-block-content-wrapper {
  border-left-color: var(--editor-accent-9, #6e5dc6);
}

.note-block-wrapper[data-theme="success"] .note-block-content-wrapper {
  border-left-color: var(--editor-success, #22c55e);
}

.note-block-wrapper[data-theme="warning"] .note-block-content-wrapper {
  border-left-color: var(--editor-warning, #eab308);
}

.note-block-wrapper[data-theme="error"] .note-block-content-wrapper {
  border-left-color: var(--editor-error, #ef4444);
}

/* Note Block Icon */
.note-block-icon {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  margin-top: 0.125rem;
}

.note-block-emoji {
  font-size: 1.5rem;
  line-height: 1;
}

/* Note Block Content */
.note-block-content {
  flex: 1;
  min-height: 1.5rem;
  outline: none;
}

.note-block-content p {
  margin: 0;
  padding: 0;
}

/* Note Block Toolbar Floating */
.note-block-toolbar-floating {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: -3.5rem;
  z-index: 10;
  animation: fadeIn 0.15s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(-4px);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

.note-block-toolbar-bottom {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.375rem 0.5rem;
  background-color: white;
  border-radius: 0.5rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.dark .note-block-toolbar-bottom {
  background-color: #1f1f1f;
  border-color: rgba(255, 255, 255, 0.1);
}

.note-toolbar-button {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.375rem 0.625rem;
  font-size: 0.875rem;
  border: none;
  border-radius: 0.375rem;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.7);
  cursor: pointer;
  transition: all 0.15s ease;
  white-space: nowrap;
}

.dark .note-toolbar-button {
  color: rgba(255, 255, 255, 0.7);
}

.note-toolbar-button:hover {
  background-color: rgba(0, 0, 0, 0.05);
  color: rgba(0, 0, 0, 0.9);
}

.dark .note-toolbar-button:hover {
  background-color: rgba(255, 255, 255, 0.05);
  color: rgba(255, 255, 255, 0.9);
}

.note-toolbar-button svg {
  flex-shrink: 0;
}

.note-toolbar-button:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

.note-toolbar-button:disabled:hover {
  background-color: transparent;
  color: rgba(0, 0, 0, 0.7);
}

.dark .note-toolbar-button:disabled:hover {
  background-color: transparent;
  color: rgba(255, 255, 255, 0.7);
}

/* Note Dropdown Menu */
.note-dropdown-content,
.note-dropdown-subcontent {
  min-width: 200px;
  background-color: white;
  border-radius: 0.5rem;
  padding: 0.375rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  border: 1px solid rgba(0, 0, 0, 0.1);
  z-index: 100;
}

.dark .note-dropdown-content,
.dark .note-dropdown-subcontent {
  background-color: #1f1f1f;
  border-color: rgba(255, 255, 255, 0.1);
}

.note-dropdown-item {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  font-size: 0.875rem;
  border-radius: 0.375rem;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.9);
  cursor: pointer;
  user-select: none;
  outline: none;
  border: none;
  width: 100%;
  text-align: left;
  transition: background-color 0.15s ease;
}

.dark .note-dropdown-item {
  color: rgba(255, 255, 255, 0.9);
}

.note-dropdown-item:hover,
.note-dropdown-item:focus {
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .note-dropdown-item:hover,
.dark .note-dropdown-item:focus {
  background-color: rgba(255, 255, 255, 0.05);
}

.note-dropdown-item-danger {
  color: #dc2626;
}

.dark .note-dropdown-item-danger {
  color: #f87171;
}

.note-dropdown-item-danger:hover {
  background-color: rgba(220, 38, 38, 0.1);
}

.dark .note-dropdown-item-danger:hover {
  background-color: rgba(248, 113, 113, 0.1);
}

.note-dropdown-separator {
  height: 1px;
  background-color: rgba(0, 0, 0, 0.1);
  margin: 0.375rem 0;
}

.dark .note-dropdown-separator {
  background-color: rgba(255, 255, 255, 0.1);
}

.note-dropdown-arrow {
  fill: white;
}

.dark .note-dropdown-arrow {
  fill: #1f1f1f;
}

/* Theme Presets */
.note-theme-presets {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  padding: 0.25rem;
}

.note-theme-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.5rem;
  border: none;
  border-radius: 0.375rem;
  background-color: transparent;
  cursor: pointer;
  transition: background-color 0.15s ease;
  width: 100%;
  text-align: left;
}

.note-theme-item:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .note-theme-item:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

.note-theme-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  border-radius: 0.375rem;
}

.note-theme-label {
  font-size: 0.875rem;
  color: rgba(0, 0, 0, 0.9);
}

.dark .note-theme-label {
  color: rgba(255, 255, 255, 0.9);
}

/* Emoji Selector */
.note-emoji-selector {
  padding: 0.5rem;
  max-width: 280px;
}

.emoji-grid {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 0.25rem;
  margin-bottom: 0.75rem;
}

.emoji-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.5rem;
  height: 2.5rem;
  padding: 0;
  border: none;
  border-radius: 0.375rem;
  background-color: transparent;
  font-size: 1.5rem;
  cursor: pointer;
  transition: background-color 0.15s ease;
}

.emoji-button:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .emoji-button:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

.emoji-input-wrapper {
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  padding-top: 0.75rem;
}

.dark .emoji-input-wrapper {
  border-top-color: rgba(255, 255, 255, 0.1);
}

.emoji-input {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0.375rem;
  font-size: 0.875rem;
  outline: none;
  background-color: white;
  color: rgba(0, 0, 0, 0.9);
}

.dark .emoji-input {
  background-color: #2a2a2a;
  border-color: rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.9);
}

.emoji-input:focus {
  border-color: var(--editor-focus-ring, color-mix(in srgb, var(--editor-accent, #0ea5e9) 50%, transparent));
}

/* Note Color Picker */
.note-color-picker {
  padding: 0.75rem;
  max-width: 280px;
}

/* =====================================================
   IMAGE BLOCK STYLES
   ===================================================== */

/* Image Block Wrapper */
.image-block-wrapper {
  display: block;
  position: relative;
  width: 100%;
  margin: 1.5rem 0;
  z-index: 1;
}

.image-block-wrapper.selected {
  /* Selection state handled by container outline */
}

.image-block-container {
  position: relative;
  border-radius: 0.5rem;
  overflow: visible;
  width: fit-content;
  max-width: 800px;
  margin: 0 auto; /* Default center */
}

/* Image Alignment - applies to container */
.image-block-wrapper.image-align-left .image-block-container {
  margin-left: 0;
  margin-right: auto;
}

.image-block-wrapper.image-align-center .image-block-container {
  margin-left: auto;
  margin-right: auto;
}

.image-block-wrapper.image-align-right .image-block-container {
  margin-left: auto;
  margin-right: 0;
}

/* .image-block-wrapper.selected .image-block-container {
  outline: 2px solid #0c66e4;
  outline-offset: 2px;
} */

/* Image Wrapper */
.image-block-image-wrapper {
  position: relative;
  display: block;
  width: fit-content;
  max-width: 100%;
}

/* Image Element */
.image-block-img {
  display: block;
  max-width: 100%;
  border-radius: 0.5rem;
  object-fit: contain;
  user-select: none;
}

.image-block-wrapper.resizing .image-block-img {
  pointer-events: none;
  opacity: 0.8;
}

/* Loading State */
.image-block-loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 2rem;
  background-color: rgba(0, 0, 0, 0.02);
  border-radius: 0.5rem;
  border: 2px dashed rgba(0, 0, 0, 0.1);
  gap: 1rem;
}

.dark .image-block-loading {
  background-color: rgba(255, 255, 255, 0.02);
  border-color: rgba(255, 255, 255, 0.1);
}

.image-loading-spinner {
  width: 2rem;
  height: 2rem;
  border: 3px solid var(--editor-border-subtle, rgba(0, 0, 0, 0.1));
  border-top-color: var(--editor-accent, #0ea5e9);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
}

.dark .image-loading-spinner {
  border-color: var(--editor-border-subtle, rgba(255, 255, 255, 0.1));
  border-top-color: var(--editor-accent, #0ea5e9);
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.image-block-loading span {
  font-size: 0.875rem;
  color: rgba(0, 0, 0, 0.6);
}

.dark .image-block-loading span {
  color: rgba(255, 255, 255, 0.6);
}

/* Error State */
.image-block-error {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  background-color: rgba(201, 55, 44, 0.05);
  border: 2px solid rgba(201, 55, 44, 0.2);
  border-radius: 0.5rem;
  color: #c9372c;
  font-size: 0.875rem;
  font-weight: 500;
}

.dark .image-block-error {
  background-color: rgba(201, 55, 44, 0.1);
  border-color: rgba(201, 55, 44, 0.3);
}

/* Caption */
.image-block-caption {
  display: block;
  width: 100%;
  margin-top: 0.5rem;
  padding: 0.5rem;
  text-align: center;
  font-size: 0.875rem;
  color: rgba(0, 0, 0, 0.6);
  border: 1px solid transparent;
  border-radius: 0.25rem;
  background-color: transparent;
  outline: none;
  transition: all 0.15s ease;
}

.dark .image-block-caption {
  color: rgba(255, 255, 255, 0.6);
}

.image-block-caption:focus {
  /* border-color: rgba(0, 0, 0, 0.1); */
  background-color: rgba(0, 0, 0, 0.02);
  color: rgba(0, 0, 0, 0.9);
}

.dark .image-block-caption:focus {
  border-color: rgba(255, 255, 255, 0.1);
  background-color: rgba(255, 255, 255, 0.02);
  color: rgba(255, 255, 255, 0.9);
}

.image-block-caption::placeholder {
  color: rgba(0, 0, 0, 0.4);
}

.dark .image-block-caption::placeholder {
  color: rgba(255, 255, 255, 0.4);
}

.image-block-caption:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Resize Handle */
.image-resize-handle {
  position: absolute;
  width: 12px;
  height: 12px;
  background-color: var(--editor-accent, #0ea5e9);
  border: 2px solid var(--editor-bg-primary, white);
  border-radius: 50%;
  cursor: ew-resize;
  z-index: 10;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  transition: all 0.15s ease;
}

.image-resize-handle-right {
  right: -6px;
  top: 50%;
  transform: translateY(-50%);
}

.image-resize-handle:hover {
  transform: translateY(-50%) scale(1.2);
  background-color: var(--editor-accent-8, #0369a1);
}

.image-resize-handle:active {
  transform: translateY(-50%) scale(1.1);
  cursor: ew-resize;
}

/* Floating Menu - positioned relative to the full-width wrapper */
.image-block-toolbar-floating {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: -3.5rem;
  z-index: 100;
  animation: fadeIn 0.2s ease-in-out;
  pointer-events: auto;
}

.image-toolbar-buttons {
  display: flex;
  gap: 0.25rem;
  background-color: white;
  border-radius: 0.5rem;
  padding: 0.25rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.dark .image-toolbar-buttons {
  background-color: #2a2a2a;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.4);
}

.image-toolbar-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 0.75rem;
  border: none;
  border-radius: 0.375rem;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.8);
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.15s ease;
  white-space: nowrap;
}

.dark .image-toolbar-button {
  color: rgba(255, 255, 255, 0.8);
}

.image-toolbar-button:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.dark .image-toolbar-button:hover {
  background-color: rgba(255, 255, 255, 0.08);
}

.image-toolbar-button-danger {
  color: #c9372c;
}

.image-toolbar-button-danger:hover {
  background-color: rgba(201, 55, 44, 0.08);
  color: #c9372c;
}

.dark .image-toolbar-button-danger:hover {
  background-color: rgba(201, 55, 44, 0.15);
}

.image-toolbar-button.active {
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 10%, transparent));
  color: var(--editor-accent, #0ea5e9);
}

.dark .image-toolbar-button.active {
  background-color: var(--editor-selection-bg, color-mix(in srgb, var(--editor-accent, #0ea5e9) 20%, transparent));
  color: var(--editor-accent-4, #7dd3fc);
}

/* Toolbar Group */
.image-toolbar-group {
  display: flex;
  gap: 0;
  border-radius: 0.375rem;
  overflow: hidden;
  border: 1px solid rgba(0, 0, 0, 0.1);
}

.dark .image-toolbar-group {
  border-color: rgba(255, 255, 255, 0.1);
}

.image-toolbar-group .image-toolbar-button {
  border-radius: 0;
  border-right: 1px solid rgba(0, 0, 0, 0.1);
}

.dark .image-toolbar-group .image-toolbar-button {
  border-right-color: rgba(255, 255, 255, 0.1);
}

.image-toolbar-group .image-toolbar-button:last-child {
  border-right: none;
}

/* Toolbar Divider */
.image-toolbar-divider {
  width: 1px;
  background-color: rgba(0, 0, 0, 0.1);
  margin: 0.25rem 0;
}

.dark .image-toolbar-divider {
  background-color: rgba(255, 255, 255, 0.1);
}
